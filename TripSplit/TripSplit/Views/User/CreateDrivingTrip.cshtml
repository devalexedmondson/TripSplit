@model TripSplit.Models.CreateDrivingTripViewModel
@{
    ViewBag.Title = "CreateDrivingTrip";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Vroom Vroom</h2>



<p>Please fill in your starting and ending address, hit submit after filling out the appropriate fields.</p>

@* Form *@

    @using (Html.BeginForm("CreateDrivingTrip", "User", FormMethod.Post, new { role = "form" }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary("", new { @class = "text-danger"})
        <div>
            @Html.TextBoxFor(m => m.originInput, new { id = "origin-input", placeholder = "Enter an origin location", Style = "height: 32px; margin-left: 12px; margin-top:12px; box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3); background-color: #fff; padding: 0 11px 0 13px; font-size: 13px; font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif" });

            @Html.TextBoxFor(m => m.destinationInput, new { id = "destination-input", placeholder = "Enter a destination location", Style = "height: 32px; margin-left: 12px; margin-top:12px; box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3); background-color: #fff; padding: 0 11px 0 13px; font-size: 13px; font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif" });


            <div id="mode-selector" class="controls" style="margin-left:12px; margin-top: 12px;box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3); background-color: #4d90fe; padding: 5px 11px 0px 11px; padding: 0 11px 0 13px">
                <input type="radio" name="type" id="changemode-driving">
                <label for="changemode-driving">Driving</label>
            </div>

            <div class="row">
                @* Map *@
                <div class="col-md-8">
                    <div id="map" style="height:600px; width: auto"></div>
                </div>

                <div class="col-md-4">

                    <div id="Trip Name" class="panel panel-default" style="font-family:'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;margin-top: 12px; margin-right: 12px; width: 200px">
                        <div class="panel-heading">
                            <center>Name</center>
                        </div>
                        <div class="panel-body">
                            @Html.TextBoxFor(m => m.Name, new { @class = "form-control", placeholder = "Example: Bacon Is Magic" })
                        </div>
                    </div>

                    <div id="duration" class="panel panel-default" style="font-family:'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif; margin-top: 12px; margin-right: 12px; width: 200px">
                        <div class="panel-heading">
                            <center>Time</center>
                        </div>
                        <div class="panel-body">
                            @*Results displayed here*@
                        </div>
                    </div>

                    <div id="distance" class="panel panel-default" style="font-family:'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;margin-top: 12px; margin-right: 12px; width: 200px">
                        <div class="panel-heading">
                            <center>Distance</center>
                        </div>
                        <div class="panel-body">
                            @*Results displayed here*@
                        </div>
                    </div>

                    <div id="distance" class="panel panel-default" style="font-family:'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;margin-top: 12px; margin-right: 12px; width: 200px">
                        <div class="panel-heading">
                            <center>How much will this trip cost you?</center>
                        </div>
                        <div class="panel-body">
                            @Html.TextBoxFor(m => m.Cost, new { @class = "form-control", placeholder = "Example: $150" })
                        </div>
                    </div>

                    <div id="trip-privacy" class="panel panel-default" style="font-family:'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;margin-top: 12px; margin-right: 12px; width: 200px">
                        <div class="panel-heading">
                            <center>Trip Privacy</center>
                        </div>
                        <div class="panel-body">
                            @Html.TextBoxFor(m => m.IsPublic, new { @class = "form-control", placeholder = "Public or Private" })
                        </div>
                    </div>

                    <div style="width: 200px">
                        @*@Html.DropDownList("Name")*@
                        @Html.DropDownList("Theme", (SelectList)ViewBag.Name, "Themes", new { @class = "form-control" })
                    </div>

                    <div class="form-group" style="margin-top: 12px">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" class="btn btn-default" value="Submit" />
                        </div>
                    </div>

                </div>
            </div>
        </div>
    }


@* 
TODO: 
    Make an ajax call to the controller to store the information about trip distance and duration to add it to the database. 
    Use Jquery to put the data in a hidden field and then store it with a HTML helper
 *@

<script>
    function initMap() {
        var map = new google.maps.Map(document.getElementById('map'), {
            mapTypeControl: false,
            center: { lat: 43.034134, lng: -87.911953 },
            zoom: 13
        });

        new AutocompleteDirectionsHandler(map);
    }

    function AutocompleteDirectionsHandler(map) {
        this.map = map;
        this.originPlaceId = null;
        this.destinationPlaceId = null;
        this.travelMode = 'DRIVING';
        var originInput = document.getElementById('origin-input');
        var destinationInput = document.getElementById('destination-input');
        var modeSelector = document.getElementById('mode-selector');
        this.directionsService = new google.maps.DirectionsService;
        this.directionsDisplay = new google.maps.DirectionsRenderer;
        this.directionsDisplay.setMap(map);

        var originAutocomplete = new google.maps.places.Autocomplete(
            originInput, { placeIdOnly: true });
        var destinationAutocomplete = new google.maps.places.Autocomplete(
            destinationInput, { placeIdOnly: true });

        this.setupClickListener('changemode-driving', 'DRIVING');

        this.setupPlaceChangedListener(originAutocomplete, 'ORIG');
        this.setupPlaceChangedListener(destinationAutocomplete, 'DEST');

        this.map.controls[google.maps.ControlPosition.TOP_LEFT].push(originInput);
        this.map.controls[google.maps.ControlPosition.TOP_LEFT].push(destinationInput);
        this.map.controls[google.maps.ControlPosition.TOP_LEFT].push(modeSelector);
    }

    AutocompleteDirectionsHandler.prototype.setupClickListener = function (id, mode) {
        var radioButton = document.getElementById(id);
        var me = this;
        radioButton.addEventListener('click', function () {
            me.travelMode = mode;
            me.route();
        });
    };

    AutocompleteDirectionsHandler.prototype.setupPlaceChangedListener = function (autocomplete, mode) {
        var me = this;
        autocomplete.bindTo('bounds', this.map);
        autocomplete.addListener('place_changed', function () {
            var place = autocomplete.getPlace();
            if (!place.place_id) {
                window.alert("Please select an option from the dropdown list.");
                return;
            }
            if (mode === 'ORIG') {
                me.originPlaceId = place.place_id;
            } else {
                me.destinationPlaceId = place.place_id;
            }
            me.route();
        });

    };

    AutocompleteDirectionsHandler.prototype.route = function () {
        if (!this.originPlaceId || !this.destinationPlaceId) {
            return;
        }
        var me = this;

        this.directionsService.route({
            origin: { 'placeId': this.originPlaceId },
            destination: { 'placeId': this.destinationPlaceId },
            travelMode: this.travelMode
        }, function (response, status) {
            if (status === 'OK') {
                me.directionsDisplay.setDirections(response);

                //Display the duration
                document.getElementById('duration').innerHTML +=
             tripDuration = "<center>" + Math.round(response.routes[0].legs[0].duration.value / 60) / 1 + " minutes</center>";

                //Dispplay the distance
                tripDistance = document.getElementById('distance').innerHTML += "<center>" + Math.round(response.routes[0].legs[0].distance.value / 1609.34) / 1 + " miles</center>";
            } else {
                window.alert('Directions request failed due to ' + status);
            }
        });
    };

</script>
<script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCgOOcTK9Xcw8WpvcPhD_mD0Um2HHFCqLI&libraries=places&callback=initMap"></script>
